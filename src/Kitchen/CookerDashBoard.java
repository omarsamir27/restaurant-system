/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Kitchen;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author ahmed
 */
public class CookerDashBoard extends JFrame {
        
    Cooker cooker;
    restaurantAgent DATA;
    Orders orders = new Orders();
    Order order = new Order();
    ArrayList<Order> orderlist;
    ArrayList<Order> queue;
    ArrayList<Dish> dishlist;
    ArrayList<Table> tablelist=new ArrayList<>();;
    Tables tables =new Tables();
    Table table = new Table();
    DefaultListModel<String> OrderModel = new DefaultListModel<>();
    HashMap<String,Order> OrderMap;
    
    public CookerDashBoard(Cooker cooker , restaurantAgent DATA) {
        try{
            this.orderlist=new ArrayList<>();
            this.orderlist=DATA.getOrders().getOrders();
        }catch(Exception e){
            this.orderlist=new ArrayList<>();
            JOptionPane.showMessageDialog(null,"Kitchen Is Clear");
        }
        this.cooker=cooker;
        this.DATA=DATA;
         initComponents();
         
         this.tablelist=DATA.getTables().getTables();
         this.OrderMap=new HashMap<>();
         this.queue=new ArrayList<>();
         for(Order order : orderlist)
             if (!order.isCooked())
                OrderModel.addElement("Order For Table :  " + order.getTableNum());         
    
        for(int i=0; i<OrderModel.size();i++)
            OrderMap.put(OrderModel.get(i),orderlist.get(i));
         OrdersToBeCookedList.setModel(OrderModel);     
        for (Order order : orderlist)
            queue.add(order);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CookerTabs = new javax.swing.JTabbedPane();
        Home = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        OrdersToBeCookedList = new javax.swing.JList<>();
        ShowDetailsbtn = new javax.swing.JButton();
        Confirmbtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        Icookedbtn = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        Details = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        DetailsArea = new javax.swing.JTextArea();
        Backbtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        CookerTabs.setBackground(new java.awt.Color(102, 0, 51));
        CookerTabs.setForeground(new java.awt.Color(255, 255, 255));
        CookerTabs.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        Home.setBackground(new java.awt.Color(102, 0, 51));

        OrdersToBeCookedList.setForeground(new java.awt.Color(102, 0, 51));
        jScrollPane1.setViewportView(OrdersToBeCookedList);

        ShowDetailsbtn.setBackground(new java.awt.Color(255, 255, 255));
        ShowDetailsbtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        ShowDetailsbtn.setForeground(new java.awt.Color(102, 0, 51));
        ShowDetailsbtn.setText("Show Details");
        ShowDetailsbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowDetailsbtnActionPerformed(evt);
            }
        });

        Confirmbtn.setBackground(new java.awt.Color(255, 255, 255));
        Confirmbtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Confirmbtn.setForeground(new java.awt.Color(102, 0, 51));
        Confirmbtn.setText("Confirm");
        Confirmbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfirmbtnActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(102, 0, 51));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Cooker DashBoard");

        Icookedbtn.setBackground(new java.awt.Color(255, 255, 255));
        Icookedbtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        Icookedbtn.setForeground(new java.awt.Color(102, 0, 51));
        Icookedbtn.setText("I Cooked This Order");
        Icookedbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IcookedbtnActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(102, 0, 51));
        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout HomeLayout = new javax.swing.GroupLayout(Home);
        Home.setLayout(HomeLayout);
        HomeLayout.setHorizontalGroup(
            HomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HomeLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(102, 102, 102)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(HomeLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(HomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(HomeLayout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addGroup(HomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HomeLayout.createSequentialGroup()
                                .addComponent(Icookedbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(125, 125, 125))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HomeLayout.createSequentialGroup()
                                .addComponent(ShowDetailsbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(148, 148, 148))))
                    .addGroup(HomeLayout.createSequentialGroup()
                        .addGap(122, 122, 122)
                        .addComponent(Confirmbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        HomeLayout.setVerticalGroup(
            HomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HomeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(HomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(HomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(HomeLayout.createSequentialGroup()
                        .addComponent(ShowDetailsbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(Icookedbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(Confirmbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        CookerTabs.addTab("Home", Home);

        Details.setBackground(new java.awt.Color(102, 0, 51));

        DetailsArea.setEditable(false);
        DetailsArea.setColumns(20);
        DetailsArea.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N
        DetailsArea.setForeground(new java.awt.Color(102, 0, 51));
        DetailsArea.setRows(5);
        jScrollPane2.setViewportView(DetailsArea);

        Backbtn.setBackground(new java.awt.Color(255, 255, 255));
        Backbtn.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        Backbtn.setForeground(new java.awt.Color(102, 0, 51));
        Backbtn.setText("Back");
        Backbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout DetailsLayout = new javax.swing.GroupLayout(Details);
        Details.setLayout(DetailsLayout);
        DetailsLayout.setHorizontalGroup(
            DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DetailsLayout.createSequentialGroup()
                .addGroup(DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DetailsLayout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 509, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(DetailsLayout.createSequentialGroup()
                        .addGap(227, 227, 227)
                        .addComponent(Backbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(131, Short.MAX_VALUE))
        );
        DetailsLayout.setVerticalGroup(
            DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DetailsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Backbtn, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                .addContainerGap())
        );

        CookerTabs.addTab("Details", Details);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(CookerTabs)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(CookerTabs, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void IcookedbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IcookedbtnActionPerformed
        // TODO add your handling code here:
        try{ 
        order = OrderMap.get(OrderModel.get(OrdersToBeCookedList.getSelectedIndex()));
        order.setCooked(true);
        for(Table tableHere : tablelist){
            if(tableHere.getTableNum() == order.getTableNum()){
                this.table.setTableNum(tableHere.getTableNum());
                this.table.setSeatsNum(tableHere.getSeatsNum());
                this.table.setSmoking(tableHere.isSmoking());
                this.table.setAvailable(tableHere.isAvailable());
                this.table.setOrder(order);
            }
        }
        orderlist.removeIf(var -> ( var.getTableNum() == this.order.getTableNum()));
        orderlist.add(this.order);
        tablelist.removeIf(var -> ( var.getTableNum() == this.order.getTableNum()));
        tablelist.add(this.table);
        queue.remove(OrdersToBeCookedList.getSelectedIndex());
        OrderModel.remove(OrdersToBeCookedList.getSelectedIndex());
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,"Nothing To Be Cooked");
        }
    }//GEN-LAST:event_IcookedbtnActionPerformed

    private void ConfirmbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfirmbtnActionPerformed
        // TODO add your handling code here:
        orders.setOrders(orderlist);
        tables.setTables(tablelist);
        DATA.setTables(tables);
        DATA.setOrders(orders);
        try {
            DATA.writeData(Boot.jarParent);
        } catch (Exception ex) {
            Logger.getLogger(CustomerDashboard.class.getName()).log(Level.SEVERE, null, ex);
        }
        JFrame loginPage = new Start(DATA);
        loginPage.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_ConfirmbtnActionPerformed

    private void ShowDetailsbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowDetailsbtnActionPerformed

        order = OrderMap.get(OrdersToBeCookedList.getSelectedValue());
        dishlist = order.getDishes();
        String text1 = ("Order Of Table Number  :  " + order.getTableNum() + "\n");
        String text2 = "";
        for(int i=0;i<dishlist.size();i++){
            text2 = (text2 + dishlist.get(i).getDishName() + "\n");
        }
        DetailsArea.setText(text1 + text2);
        CookerTabs.setSelectedIndex(1);
    }//GEN-LAST:event_ShowDetailsbtnActionPerformed

    private void BackbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackbtnActionPerformed
        // TODO add your handling code here:
        CookerTabs.setSelectedIndex(0);
    }//GEN-LAST:event_BackbtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        JFrame loginPage = new Start(DATA);
        this.dispose();
        loginPage.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Backbtn;
    private javax.swing.JButton Confirmbtn;
    private javax.swing.JTabbedPane CookerTabs;
    private javax.swing.JPanel Details;
    private javax.swing.JTextArea DetailsArea;
    private javax.swing.JPanel Home;
    private javax.swing.JButton Icookedbtn;
    private javax.swing.JList<String> OrdersToBeCookedList;
    private javax.swing.JButton ShowDetailsbtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
